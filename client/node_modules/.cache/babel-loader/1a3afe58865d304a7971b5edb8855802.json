{"ast":null,"code":"var _jsxFileName = \"C:\\\\Homework\\\\employee-directory\\\\client\\\\src\\\\Components\\\\Employees\\\\employees.js\";\nimport React from 'react';\n\nconst Employees = props => {\n  const {\n    employees\n  } = props; //console.log(employees);\n\n  let employeesArr;\n  let style;\n\n  if (employees) {\n    employeesArr = employees.map((val, index) => {\n      if ((index + 2) % 2 === 0) {\n        style = \"row p-3 bg-light\";\n      } else {\n        style = \"row p-3\";\n      }\n\n      return React.createElement(\"div\", {\n        className: style,\n        key: val.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2 font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, val.username), React.createElement(\"div\", {\n        className: \"col-3 font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, val.name), React.createElement(\"div\", {\n        className: \"col font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, val.phone), React.createElement(\"div\", {\n        className: \"col-3 font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: val.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, val.email)), React.createElement(\"div\", {\n        className: \"col-2 font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, val.website));\n    }).sort((a, b) => {\n      if (props.sortBy === 'A-Z') {\n        console.log(props.sortBy);\n        let nameA = a.props.children[1].props.children.toUpperCase();\n        let nameB = b.props.children[1].props.children.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n      } else if (props.sortBy === 'Z-A') {\n        let nameA = a.props.children[1].props.children.toUpperCase();\n        let nameB = b.props.children[1].props.children.toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n      } //no sort\n\n\n      return 0;\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container mt-4 border-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, employeesArr);\n};\n\nexport default Employees;","map":{"version":3,"sources":["C:/Homework/employee-directory/client/src/Components/Employees/employees.js"],"names":["React","Employees","props","employees","employeesArr","style","map","val","index","id","username","name","phone","email","website","sort","a","b","sortBy","console","log","nameA","children","toUpperCase","nameB"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst Employees = props => {\r\n    const { employees } = props;\r\n    //console.log(employees);\r\n    let employeesArr;\r\n    let style;\r\n\r\n    if (employees) {\r\n        employeesArr = employees.map((val, index) => {\r\n            if((index + 2) % 2 === 0) {\r\n                style = \"row p-3 bg-light\"\r\n            } else {\r\n                style = \"row p-3\"\r\n            }\r\n            return <div className={style} key={val.id}>\r\n                <div className=\"col-2 font-weight-bold\">\r\n                    {val.username}\r\n                </div>\r\n                <div className=\"col-3 font-weight-bold\">\r\n                    {val.name}\r\n                </div>\r\n                <div className=\"col font-weight-bold\">\r\n                    {val.phone}\r\n                </div>\r\n                <div className=\"col-3 font-weight-bold\">\r\n                    <a href={val.email}>{val.email}</a>\r\n                </div>\r\n                <div className=\"col-2 font-weight-bold\">\r\n                    {val.website}\r\n                </div>\r\n            </div>\r\n        })\r\n        .sort((a, b) => {\r\n                if(props.sortBy === 'A-Z') \r\n                {\r\n                    console.log(props.sortBy)\r\n                    let nameA = a.props.children[1].props.children.toUpperCase();\r\n                    let nameB = b.props.children[1].props.children.toUpperCase();\r\n                    if (nameA < nameB) {\r\n                        return -1\r\n                    }\r\n                } else if(props.sortBy === 'Z-A') {\r\n                    let nameA = a.props.children[1].props.children.toUpperCase();\r\n                    let nameB = b.props.children[1].props.children.toUpperCase();\r\n                    if (nameA > nameB) {\r\n                        return -1\r\n                    }\r\n                } \r\n                //no sort\r\n                return 0;   \r\n            })\r\n    } else {\r\n        return <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4 border-top\">\r\n            {employeesArr}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Employees;"]},"metadata":{},"sourceType":"module"}